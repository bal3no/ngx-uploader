{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { humanizeBytes, UploadStatus } from 'ngx-uploader';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../projects/ngx-uploader/src/lib/ng-file-drop.directive\";\nimport * as i3 from \"../../projects/ngx-uploader/src/lib/ng-file-select.directive\";\nfunction AppComponent_div_25_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Uploading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_25_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Done\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_25_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 37)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const f_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", f_r1.progress == null ? null : f_r1.progress.data == null ? null : f_r1.progress.data.speedHuman, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"ETA \", f_r1.progress == null ? null : f_r1.progress.data == null ? null : f_r1.progress.data.etaHuman, \"\");\n  }\n}\nfunction AppComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"div\", 24)(2, \"div\", 25)(3, \"div\", 26);\n    i0.ɵɵelement(4, \"i\", 27);\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 28)(8, \"i\", 29);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_25_Template_i_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const f_r1 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.cancelUpload(f_r1.id));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 30)(10, \"div\", 31);\n    i0.ɵɵelement(11, \"span\", 32);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 33)(13, \"span\", 34)(14, \"span\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(16, AppComponent_div_25_span_16_Template, 2, 0, \"span\", 35);\n    i0.ɵɵtemplate(17, AppComponent_div_25_span_17_Template, 2, 0, \"span\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, AppComponent_div_25_span_18_Template, 5, 2, \"span\", 36);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const f_r1 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(f_r1.name);\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleProp(\"width\", (f_r1 == null ? null : f_r1.progress == null ? null : f_r1.progress.data == null ? null : f_r1.progress.data.percentage) + \"%\");\n    i0.ɵɵclassProp(\"is-done\", (f_r1 == null ? null : f_r1.progress == null ? null : f_r1.progress.data == null ? null : f_r1.progress.data.percentage) === 100);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"is-done\", (f_r1 == null ? null : f_r1.progress == null ? null : f_r1.progress.data == null ? null : f_r1.progress.data.percentage) === 100);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", f_r1.progress == null ? null : f_r1.progress.data == null ? null : f_r1.progress.data.percentage, \"% \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (f_r1.progress == null ? null : f_r1.progress.data == null ? null : f_r1.progress.data.percentage) !== 100);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (f_r1.progress == null ? null : f_r1.progress.data == null ? null : f_r1.progress.data.percentage) === 100);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (f_r1.progress == null ? null : f_r1.progress.data == null ? null : f_r1.progress.data.percentage) !== 0 && (f_r1.progress == null ? null : f_r1.progress.data == null ? null : f_r1.progress.data.percentage) !== 100);\n  }\n}\nlet AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.url = '/upload';\n      this.options = {\n        concurrency: 1,\n        maxUploads: 3,\n        maxFileSize: 1000000\n      };\n      this.files = [];\n      this.uploadInput = new EventEmitter();\n      this.humanizeBytes = humanizeBytes;\n    }\n    onUploadOutput(output) {\n      if (output.type === 'allAddedToQueue') {\n        const event = {\n          type: 'uploadAll',\n          url: this.url,\n          method: 'POST',\n          data: {\n            foo: 'bar'\n          }\n        };\n        this.uploadInput.emit(event);\n      } else if (output.type === 'addedToQueue' && typeof output.file !== 'undefined') {\n        this.files.push(output.file);\n      } else if (output.type === 'uploading' && typeof output.file !== 'undefined') {\n        const index = this.files.findIndex(file => typeof output.file !== 'undefined' && file.id === output.file.id);\n        this.files[index] = output.file;\n      } else if (output.type === 'cancelled' || output.type === 'removed') {\n        this.files = this.files.filter(file => file !== output.file);\n      } else if (output.type === 'dragOver') {\n        this.dragOver = true;\n      } else if (output.type === 'dragOut') {\n        this.dragOver = false;\n      } else if (output.type === 'drop') {\n        this.dragOver = false;\n      } else if (output.type === 'rejected' && typeof output.file !== 'undefined') {\n        console.log(output.file.name + ' rejected');\n      }\n      this.files = this.files.filter(file => file.progress.status !== UploadStatus.Done);\n    }\n    startUpload() {\n      const event = {\n        type: 'uploadAll',\n        url: this.url,\n        method: 'POST',\n        data: {\n          foo: 'bar'\n        }\n      };\n      this.uploadInput.emit(event);\n    }\n    cancelUpload(id) {\n      this.uploadInput.emit({\n        type: 'cancel',\n        id: id\n      });\n    }\n    removeFile(id) {\n      this.uploadInput.emit({\n        type: 'remove',\n        id: id\n      });\n    }\n    removeAllFiles() {\n      this.uploadInput.emit({\n        type: 'removeAll'\n      });\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 32,\n    vars: 5,\n    consts: [[1, \"hero\", \"is-fullheight\"], [1, \"hero-body\"], [1, \"container\"], [1, \"columns\", \"is-multiline\"], [1, \"column\", \"is-6\", \"is-offset-3\"], [1, \"upload-box\"], [1, \"upload-box-header\"], [1, \"control-circles\"], [1, \"circle\", \"is-green\"], [1, \"circle\", \"is-yellow\"], [1, \"circle\", \"is-red\"], [1, \"header-title\"], [1, \"gh-icon\"], [\"target\", \"_blank\", \"href\", \"https://github.com/bleenco/ngx-uploader\"], [1, \"ionicon\", \"ion-social-github\"], [1, \"upload-box-content\"], [\"ngFileDrop\", \"\", 1, \"drop-container\", 3, \"options\", \"uploadInput\", \"uploadOutput\"], [1, \"upload-button\"], [\"type\", \"file\", \"ngFileSelect\", \"\", \"multiple\", \"\", 3, \"options\", \"uploadInput\", \"uploadOutput\"], [\"class\", \"upload-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"help-text\"], [\"href\", \"https://github.com/bleenco\"], [\"src\", \"/assets/images/bleenco-logo.svg\"], [1, \"upload-item\"], [1, \"upload-item-content\"], [1, \"filename\"], [1, \"filename-left\"], [1, \"ionicon\", \"ion-ios-copy\"], [1, \"filename-right\"], [1, \"ionicon\", \"ion-close-round\", 3, \"click\"], [1, \"progress-content\"], [1, \"progress\"], [1, \"bar\"], [1, \"progress-text-content\"], [1, \"progress-text\"], [4, \"ngIf\"], [\"class\", \"speed-and-eta-text\", 4, \"ngIf\"], [1, \"speed-and-eta-text\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7);\n        i0.ɵɵelement(8, \"span\", 8)(9, \"span\", 9)(10, \"span\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 11)(12, \"h2\");\n        i0.ɵɵtext(13, \"ngx-uploader\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 12)(15, \"a\", 13);\n        i0.ɵɵelement(16, \"i\", 14);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"div\", 15)(18, \"div\", 16);\n        i0.ɵɵlistener(\"uploadOutput\", function AppComponent_Template_div_uploadOutput_18_listener($event) {\n          return ctx.onUploadOutput($event);\n        });\n        i0.ɵɵelementStart(19, \"p\");\n        i0.ɵɵtext(20, \" Drag files here or \");\n        i0.ɵɵelementStart(21, \"label\", 17)(22, \"input\", 18);\n        i0.ɵɵlistener(\"uploadOutput\", function AppComponent_Template_input_uploadOutput_22_listener($event) {\n          return ctx.onUploadOutput($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(23, \" browse \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(24, \" to upload. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(25, AppComponent_div_25_Template, 19, 11, \"div\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 20)(27, \"span\");\n        i0.ɵɵtext(28, \"Upload concurrency is intentionally set to single file. All files are immediately deleted after uploaded.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"span\")(30, \"a\", 21);\n        i0.ɵɵelement(31, \"img\", 22);\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"options\", ctx.options)(\"uploadInput\", ctx.uploadInput);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"options\", ctx.options)(\"uploadInput\", ctx.uploadInput);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.files);\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i2.NgFileDropDirective, i3.NgFileSelectDirective],\n    encapsulation: 2\n  });\n  return AppComponent;\n})();\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}