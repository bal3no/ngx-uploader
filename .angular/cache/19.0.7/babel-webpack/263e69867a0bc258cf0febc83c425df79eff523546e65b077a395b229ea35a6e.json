{"ast":null,"code":"import { ElementRef, EventEmitter } from '@angular/core';\nimport { NgUploaderService } from './ngx-uploader.class';\nimport * as i0 from \"@angular/core\";\nexport let NgFileSelectDirective = /*#__PURE__*/(() => {\n  class NgFileSelectDirective {\n    elementRef;\n    options;\n    uploadInput;\n    uploadOutput;\n    upload;\n    el;\n    _sub;\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n      this.uploadOutput = new EventEmitter();\n    }\n    ngOnInit() {\n      this._sub = [];\n      const concurrency = this.options && this.options.concurrency || Number.POSITIVE_INFINITY;\n      const allowedContentTypes = this.options && this.options.allowedContentTypes || ['*'];\n      const maxUploads = this.options && this.options.maxUploads || Number.POSITIVE_INFINITY;\n      const maxFileSize = this.options && this.options.maxFileSize || Number.POSITIVE_INFINITY;\n      this.upload = new NgUploaderService(concurrency, allowedContentTypes, maxUploads, maxFileSize);\n      this.el = this.elementRef.nativeElement;\n      this.el.addEventListener('change', this.fileListener, false);\n      this._sub.push(this.upload.serviceEvents.subscribe(event => {\n        this.uploadOutput.emit(event);\n      }));\n      if (this.uploadInput instanceof EventEmitter) {\n        this._sub.push(this.upload.initInputEvents(this.uploadInput));\n      }\n    }\n    ngOnDestroy() {\n      if (this.el) {\n        this.el.removeEventListener('change', this.fileListener, false);\n        this._sub.forEach(sub => sub.unsubscribe());\n      }\n    }\n    fileListener = () => {\n      if (this.el.files) {\n        this.upload.handleFiles(this.el.files);\n      }\n    };\n    static ɵfac = function NgFileSelectDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgFileSelectDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n    static ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: NgFileSelectDirective,\n      selectors: [[\"\", \"ngFileSelect\", \"\"]],\n      inputs: {\n        options: \"options\",\n        uploadInput: \"uploadInput\"\n      },\n      outputs: {\n        uploadOutput: \"uploadOutput\"\n      }\n    });\n  }\n  return NgFileSelectDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}